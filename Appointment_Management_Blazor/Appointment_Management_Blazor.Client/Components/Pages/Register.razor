@page "/register"
@using Appointment_Management_Blazor.Client.Services
@using Appointment_Management_Blazor.Shared.HelperModel
@using Appointment_Management_Blazor.Shared.Models
@inject NavigationManager NavigationManager
@inject IAccountClientService AccountClientService
<h3>Register</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="fullName">Full Name</label>
        <InputText id="fullName" @bind-Value="registerModel.FullName" class="form-control" />
        <ValidationMessage For="@(() => registerModel.FullName)" />
    </div>

    <div class="form-group">
        <label for="gender">Gender</label>
        <InputSelect id="gender" @bind-Value="registerModel.Gender" class="form-control">
            <option value="">Select Gender</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="Other">Other</option>
        </InputSelect>
        <ValidationMessage For="@(() => registerModel.Gender)" />
    </div>

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="registerModel.Email" class="form-control" />
        <ValidationMessage For="@(() => registerModel.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" @bind-Value="registerModel.Password" class="form-control" />
        <ValidationMessage For="@(() => registerModel.Password)" />
    </div>

    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" type="password" @bind-Value="registerModel.ConfirmPassword" class="form-control" />
        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
    </div>

    <div class="form-group">
        <label for="joinDate">Join Date</label>
        <InputDate id="joinDate" @bind-Value="registerModel.JoinDate" class="form-control" />
        <ValidationMessage For="@(() => registerModel.JoinDate)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (responseMessage != null)
{
    <div class="alert @(responseMessage.IsSuccess ? "alert-success" : "alert-danger") mt-3">
        @responseMessage.Message
    </div>
}

@code {
    private RegisterViewModel registerModel = new RegisterViewModel();
    private AuthResponse responseMessage;

    private async Task HandleValidSubmit()
    {
        responseMessage = await AccountClientService.RegisterAsync(registerModel);

        if (responseMessage.IsSuccess)
        {
            NavigationManager.NavigateTo("/login");
        }
    }
}